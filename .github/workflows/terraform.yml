# # This is a basic workflow to help you get started with Actions

# name: Terraform

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   terraform:
#     name: 'Terraform'
#     env:
#       ARM_CLIENT_ID: ${{secrets.AZURE_AD_CLIENT_ID}}
#       ARM_CLIENT_SECRET: ${{secrets.AZURE_AD_CLIENT_SECRET}}
#       ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
#       ARM_TENANT_ID: ${{secrets.AZURE_AD_TENANT_ID}}
#     runs-on: ubuntu-latest
#     environment: production
    
#     defaults:
#       run:
#         shell: bash
#         working-directory: ./infrastructure
        
#     steps:
#     - uses: actions/checkout@master
#     - uses: hashicorp/setup-terraform@main

#     # - name: Run Terrascan
#     #   uses: accurics/terrascan-action@main
#     #   with:
#     #     iac_type: 'terraform'
#     #     iac_version: 'v14'
#     #     policy_type: 'azure'
#     #     only_warn: true
#     #     sarif_upload: true

#     # - name: Setup TFLint
#     #   uses: terraform-linters/setup-tflint@master
#     #   with:
#     #       tflint_versions: v0.29.0
    
#     # - name: Init TFLint
#     #   run: tflint --init
    
#     # - name: Run TFLint
#     #   run: tflint -f json
      
#     - name: 'Terraform Format'
#       id: fmt
#       run: terraform fmt -check

#     - name: tfsec sarif report
#       uses: aquasecurity/tfsec-sarif-action@master
#       with:
#         sarif_file: tfsec.sarif
#         tfsec_args: --force-all-dirs --verbose
    
#     - run: cat tfsec.sarif
    
#     # - name: upload sarif file
#     #   uses: github/codeql-action/upload-sarif@v1
#     #   with:
#     #     sarif_file: tfsec.sarif
      
    
#     # - name: 'Terraform Init'
#     #   id: init
#     #   run: terraform init -no-color

#     # - name: 'Terraform Validate'
#     #   id: validate
#     #   run: terraform validate -no-color

#     # - name: 'Terraform Plan'
#     #   id: plan
#     #   run: terraform plan -no-color
#     #   continue-on-error: true

name: tfsec
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  terraform:
    name: validate terraform
    runs-on: ubuntu-latest

    steps:
      - uses: hashicorp/setup-terraform@main
      - name: Clone repo
        uses: actions/checkout@master

      - name: 'Terraform Format'
        id: fmt
        run: terraform fmt -check -recursive

      - name: run tfsec
        uses: aquasecurity/tfsec-sarif-action@master
        with:
          sarif_file: tfsec.sarif
          tfsec_args: --force-all-dirs

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          category: tfsec
          sarif_file: tfsec.sarif

      - name: add tfsec issues to pr
        if: ${{ github.event_name == 'pull_request' }}
        uses: breaman/tfsec-pr-commenter-action@main
        with:
          github_token: ${{ github.token }}

      # - name: run tflint init
      #   run: docker run --rm -t -v "$(pwd):/data" ghcr.io/terraform-linters/tflint --init
      
      - name: run tflint
        run: docker run --rm -t -v "$(pwd):/data" ghcr.io/terraform-linters/tflint-bundle -f sarif

      # - run: echo tflint.sarif

      # - name: Upload SARIF file
      #   uses: github/codeql-action/upload-sarif@v1
      #   with:
      #     category: tflint
      #     sarif_file: tflint.sarif